<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.dao.UserDao">
	<cache type="com.example.cache.MybatisRedisCache">
	<property name="eviction" value="LRU"/>
	<property name="flushInterval" value="6000000"/>
	<property name="readOnly" value="false"/>
	<property name="size" value="1024"/>
	</cache>
    <sql id="BASE_TABLE">
        t_user
    </sql>
    <sql id="BASE_COLUMN">
        userId,userName,password,phone
    </sql>
    <insert id="insert" parameterType="UserDomain">
        INSERT INTO
        <include refid="BASE_TABLE"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            userName,
            password,
            <if test="phone != null">
                phone,
            </if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            #{userName, jdbcType=VARCHAR},#{password, jdbcType=VARCHAR},
            <if test="phone != null">
                #{phone, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="selectUsers" resultType="UserDomain" useCache="true">
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"></include>
    </select>
    <select id="getUserDomainById" resultType="UserDomain">
    	 SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"></include>
        where userId = #{id}
    </select>
	<delete id="delete">
		delete from  <include refid="BASE_TABLE"/>
		where userId = #{id}
	</delete>
	<update id="update" parameterType="UserDomain">
	update 
	<include refid="BASE_TABLE" ></include>
	SET userName = #{userName} ,password = #{password}, phone=#{phone}
	where userId = #{userId}
	</update>
</mapper>